import { FC } from 'react';

export interface TABLE_CONSTANT_RETURN_TYPE {
  id?: string;
  isColumnVisible: boolean;
  title: string;
  render?: (rowData) => JSX.Element | string | null;
}

export interface FILTER_CONSTANT_RETURN_TYPE {
  type: string;
  name: string;
  options?: Array<any>;
  handleSelect?: CallableFunction;
  handleInput?: CallableFunction;
  value?: string;
  label?: string;
  onChange?: CallableFunction;
  inputErrorMessage?: string;
  inputError?: boolean;
  handleInputBlur?: CallableFunction;
}

export interface DateRangeType {
  startDate: string | Date;
  endDate: string | Date;
  key: string;
}

export type permissionEnum =
  | 'VIEW_DATA_ONLY'
  | 'UPDATE_GATEWAY_CONFIG'
  | 'CREATE_REFUND'
  | 'CREATE_GATEWAY'
  | 'CREATE_USER'
  | 'CREATE_ROLE'
  | 'ACTIVATION_DEACTIVATION_ON_GATEWAYS'
  | 'CREATE_ROUTES'
  | 'UPDATE_DELETE_USER'
  | 'VERIFY_IMEI'
  | 'UPDATE_DELETE_PREFERENCE_ROUTES'
  | 'UPDATE_PREFERENCE_PRIORITY_LOGIC'
  | 'UPDATE_DELETE_CUSTOM_ROUTING_LOGIC'
  | 'UPDATE_GENERAL_SETTINGS_DATA'
  | 'UPDATE_WEBHOOK_SETTINGS_DATA'
  | 'UPDATE_CHECKOUT_THEME_SETTINGS_DATA'
  | 'CREATE_ADMIN_USER'
  | 'CREATE_ADMIN_ROLE'
  | 'UPDATE_DELETE_CUSTOM_ROUTE_ADMIN'
  | 'VIEW_GATEWAY_CONFIG'
  | 'VIEW_CREDENTIALS'
  | 'CREATE_PAYMENT_LINKS'
  | 'APPROVE_REJECT_BENEFICIARIES'
  | 'CREATE_BENEFICIARIES'
  | 'APPROVE_REJECT_PAYOUTS'
  | 'CREATE_PAYOUTS';

export type routeConfigLayout =
  | 'admin'
  | 'merchant'
  | 'public'
  | 'merchant-payout';

export interface routeConfigType {
  path: string;
  component: FC<any>;
  key: string;
  allowedPermission?: Array<permissionEnum>;
  exact?: boolean;
  layout: routeConfigLayout;
}

export interface reduxStateType {
  isSuccess: boolean;
  isLoading: boolean;
  isFailure: boolean;
  errorCode: string | number;
  data: any;
  errorMessage: string;
  responseCode: string | number;
}
export interface CleverTapEventConfig {
  eventName: string;
  eventPayload?: { [property: string]: string };
}

export enum CleverTapEventConfigName {
  SIGN_UP_EXITED_SIGN_IN = 'SIGN_UP_EXITED_SIGN_IN',
  SIGN_UP_EXITED_CREATE_ACCOUNT = 'SIGN_UP_EXITED_CREATE_ACCOUNT',
  SIGN_UP_SHOWN = 'SIGN_UP_SHOWN',
  LOGIN_SHOWN = 'LOGIN_SHOWN',
  LOGIN_PAGE_EXITED_SIGN_UP = 'LOGIN_PAGE_EXITED_SIGN_UP',
  LOGIN_PAGE_EXITED_FORGOT_PASSWORD = 'LOGIN_PAGE_EXITED_FORGOT_PASSWORD',
  LOGIN_PAGE_EXITED_CONTINUE = 'LOGIN_PAGE_EXITED_CONTINUE',
  RESET_PASSWORD_SHOWN = 'RESET_PASSWORD_SHOWN',
  RESET_PASSWORD_EXITED_CANCEL = 'RESET_PASSWORD_EXITED_CANCEL',
  RESET_PASSWORD_EXITED_SEND_OTP = 'RESET_PASSWORD_EXITED_SEND_OTP',
  OVERVIEW_PAGE_SHOWN = 'OVERVIEW_PAGE_SHOWN',
  SIDEBAR_TAB_CLICKED_PAYMENT = 'SIDEBAR_TAB_CLICKED_PAYMENT',
  SIDEBAR_TAB_CLICKED_REFUNDS = 'SIDEBAR_TAB_CLICKED_REFUNDS',
  SIDEBAR_TAB_CLICKED_SMART_ROUTING = 'SIDEBAR_TAB_CLICKED_SMART_ROUTING',
  SIDEBAR_TAB_CLICKED_PAYMENT_LINKS = 'SIDEBAR_TAB_CLICKED_PAYMENT_LINKS',
  SIDEBAR_TAB_CLICKED_PAYMENT_PAGES = 'SIDEBAR_TAB_CLICKED_PAYMENT_PAGES',
  SIDEBAR_TAB_CLICKED_ANALYTICS = 'SIDEBAR_TAB_CLICKED_ANALYTICS',
  SIDEBAR_TAB_CLICKED_SETTINGS = 'SIDEBAR_TAB_CLICKED_SETTINGS',
  CONTACT_SUPPORT_SHOWN = 'CONTACT_SUPPORT_SHOWN',
  CONTACT_SUPPORT_EXITED_CLOSE = 'CONTACT_SUPPORT_EXITED_CLOSE',
  CONTACT_SUPPORT_MAIL_ID_CLICKED = 'CONTACT_SUPPORT_MAIL_ID_CLICKED',
  DOCUMENTATION_CLICKED = 'DOCUMENTATION_CLICKED',
  USER_MANAGEMENT_CLICKED_PROFILE = 'USER_MANAGEMENT_CLICKED_PROFILE',
  USER_MANAGEMENT_CLICKED_SETTINGS = 'USER_MANAGEMENT_CLICKED_SETTINGS',
  USER_MANAGEMENT_ROLE_CREATED = 'USER_MANAGEMENT_ROLE_CREATED',
  USER_MANAGEMENT_USER_CREATED = 'USER_MANAGEMENT_USER_CREATED',
  GENERAL_SETTINGS_URL_CHANGED = 'GENERAL_SETTINGS_URL_CHANGED',
  CHECKOUT_SETTINGS_THEME_CHANGED = 'CHECKOUT_SETTINGS_THEME_CHANGED',
  SETTINGS_CREDENTIALS_SHOWN = 'SETTINGS_CREDENTIALS_SHOWN',
  SETTINGS_CREDENTIALS_COPIED_MID = 'SETTINGS_CREDENTIALS_COPIED_MID',
  SETTINGS_CREDENTIALS_COPIED_ACCESS_CODE = 'SETTINGS_CREDENTIALS_COPIED_ACCESS_CODE',
  SETTINGS_CREDENTIALS_COPIED_SECRET_KEY = 'SETTINGS_CREDENTIALS_COPIED_SECRET_KEY',
  SETTINGS_WEBHOOK_URL_CHANGED = 'SETTINGS_WEBHOOK_URL_CHANGED',
  PAYMENT_PAGES_REDIRECTED = 'PAYMENT_PAGES_REDIRECTED',
  PAYMENT_LINKS_BULK_UPLOAD_HISTORY_VIEWED = 'PAYMENT_LINKS_BULK_UPLOAD_HISTORY_VIEWED',
  PAYMENT_LINKS_REPORT_DOWNLOADED = 'PAYMENT_LINKS_REPORT_DOWNLOADED',
  PAYMENT_LINK_CREATED_BULK = 'PAYMENT_LINK_CREATED_BULK',
  PAYMENT_LINK_CREATED_INDIVIDUAL = 'PAYMENT_LINK_CREATED_INDIVIDUAL',
  SMART_ROUTING_GATEWAY_CREATED = 'SMART_ROUTING_GATEWAY_CREATED',
  SMART_ROUTING_FAQ_SHOWN = 'SMART_ROUTING_FAQ_SHOWN',
  SMART_ROUTING_PREFERENCE_SCORE_BIN_ROUTING_UPDATED = 'SMART_ROUTING_PREFERENCE_SCORE_BIN_ROUTING_UPDATED',
  SMART_ROUTING_PREFERENCE_SCORE_ISSUER_ROUTING_UPDATED = 'SMART_ROUTING_PREFERENCE_SCORE_ISSUER_ROUTING_UPDATED',
  SMART_ROUTING_PREFERENCE_SCORE_CARD_BRAND_ROUTING_UPDATED = 'SMART_ROUTING_PREFERENCE_SCORE_CARD_BRAND_ROUTING_UPDATED',
  SMART_ROUTING_PRIORITY_LOGIC_UPDATED = 'SMART_ROUTING_PRIORITY_LOGIC_UPDATED',
  SMART_ROUTING_CUSTOM_ROUTING_LOGIC_TURNED_ON = 'SMART_ROUTING_CUSTOM_ROUTING_LOGIC_TURNED_ON',
  SMART_ROUTING_CUSTOM_ROUTING_LOGIC_TURNED_OFF = 'SMART_ROUTING_CUSTOM_ROUTING_LOGIC_TURNED_OFF',
  REFUND_BULK_UPLOAD_HISTORY_SHOWN = 'REFUND_BULK_UPLOAD_HISTORY_SHOWN',
  REFUND_BULK_UPLOAD_SUCCESS = 'REFUND_BULK_UPLOAD_SUCCESS',
  REFUND_REPORT_DOWNLOADED = 'REFUND_REPORT_DOWNLOADED',
  PAYMENT_REPORT_DOWNLOADED = 'PAYMENT_REPORT_DOWNLOADED',
  OVERVIEW_REPORT_DOWNLOADED = 'OVERVIEW_REPORT_DOWNLOADED',
  LOGIN_OTP_PAGE_SHOWN = 'LOGIN_OTP_PAGE_SHOWN',
  LOGIN_OTP_SUBMITTED = 'LOGIN_OTP_SUBMITTED',
  LOGIN_OTP_ERROR_MESSAGE_SHOWN = 'LOGIN_OTP_ERROR_MESSAGE_SHOWN',
  LOGIN_OTP_RESENT = 'LOGIN_OTP_RESENT',
  INCOMPATIBLE_DEVICE_DIALOG_SHOWN = 'INCOMPATIBLE_DEVICE_DIALOG_SHOWN',
}

export interface AddRemitterAccountPayloadType {
  accountName: string;
  accountNo: string;
  accountType: string;
  bankName: string;
  ifscCode: string;
  merchantId: string | number;
  status: string;
}

export interface UpdateRemitterAccountPayloadType {
  id: number;
  merchantId: string | number;
  status: string;
}

export interface ActionsReturnType {
  type: string;
  payload: {
    serviceMethod: () => void;
    actionTypeSuccess: string;
    actionTypeFailure: string;
    actionTypeRequest: string;
  };
}

export interface UpdateKycDetailsRequestPayloadType {
  businessName: string;
  businessPan: string;
  merchantId: MerchantIdType;
  contactNumber: string;
  email: string;
  taxInformation: string;
  billingAddress: string;
  kycDocuments: string;
  entityType: string;
  kycStatus: string;
  id: null | string;
}
export type MerchantIdType = string | number;
